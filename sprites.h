#include "gba.h"

#define NCOLS 5

// RGB palette used for sprites. The sprites defined below use the index of the color in the palette (so black = 0, white = 1, ...)
int palette[] = {
RGB(0,0,0), // transparent 0
RGB(31,31,31), // pure white 1
RGB(31,31,0), // pure yellow 2
RGB(31,0,0), // pure red 3
RGB(1,1,1) // almost black 4
};


// Sprite array, defining each big 16x16 sprite as 4 8x8 tiles, using the palette above

u16 sprites[] = {
#define doggo_down_close 0
0,1,0,0,0,0,1,0,
0,1,1,0,0,1,1,0,
0,1,1,1,1,1,1,0,
1,1,1,1,1,1,1,1,
1,4,1,4,4,1,4,1,
1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,
0,1,1,1,1,1,1,0,

#define doggo_down_open doggo_down_close+1
0,1,0,0,0,0,1,0,
0,1,1,0,0,1,1,0,
0,1,1,1,1,1,1,0,
1,1,1,1,1,1,1,1,
1,4,1,4,4,1,4,1,
1,1,1,1,1,1,1,1,
1,1,1,3,3,1,1,1,
0,1,1,3,3,1,1,0,

#define doggo_up_close doggo_down_open+1
0,1,0,0,0,0,1,0,
0,1,1,0,0,1,1,0,
0,1,1,1,1,1,1,0,
1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,
0,1,1,1,1,1,1,0,

#define doggo_up_open doggo_up_close+1
0,1,0,0,0,0,1,0,
0,1,1,0,0,1,1,0,
0,1,1,1,1,1,1,0,
1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,
0,1,1,1,1,1,1,0,

#define doggo_right_close doggo_up_open+1
0,1,0,0,0,0,0,0,
0,1,1,0,0,0,0,0,
1,1,1,1,1,0,0,0,
1,1,4,1,1,1,4,4,
1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,0,
0,1,1,1,0,0,0,0,

#define doggo_right_open doggo_right_close+1
0,1,0,0,0,0,0,0,
0,1,1,0,0,0,0,0,
1,1,1,1,1,0,0,0,
1,1,4,1,1,1,4,4,
1,1,1,1,1,1,1,1,
1,1,1,1,1,1,3,3,
1,1,1,1,1,1,3,3,
0,1,1,1,0,0,0,0,

#define doggo_left_close doggo_right_close+1
0,0,0,0,0,0,1,0,
0,0,0,0,0,1,1,0,
0,0,0,1,1,1,1,1,
4,4,1,1,1,4,1,1,
1,1,1,1,1,1,1,1,
1,1,1,1,1,1,1,1,
0,1,1,1,1,1,1,1,
0,0,0,0,1,1,1,0,

#define doggo_left_open doggo_left_close+1
0,0,0,0,0,0,1,0,
0,0,0,0,0,1,1,0,
0,0,0,1,1,1,1,1,
4,4,1,1,1,4,1,1,
1,1,1,1,1,1,1,1,
3,3,1,1,1,1,1,1,
3,3,1,1,1,1,1,1,
0,0,0,0,1,1,1,0,

#define target_tile doggo_left_open+1
4,4,4,4,4,4,4,4,
4,0,0,0,0,0,0,4,
4,0,0,0,0,0,0,4,
4,0,0,0,0,0,0,4,
4,0,0,0,0,0,0,4,
4,0,0,0,0,0,0,4,
4,0,0,0,0,0,0,4,
4,4,4,4,4,4,4,4
};
